{"version":3,"sources":["components/layout/signedinlinks.js","store/actions/authActions.js","components/layout/signedoutlinks.js","components/layout/navbar.js","components/dashboard/notifications.js","components/projects/projectSummary.js","components/projects/projectList.js","components/dashboard/dashboard.js","components/projects/projectDetails.js","components/auth/signin.js","components/auth/signup.js","components/projects/createProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbconfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","catch","props","profile","className","to","onClick","initials","SignedOutLinks","state","firebase","uid","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","project","title","authorFirstName","authorLastName","createdAt","calendar","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","Signin","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","error","Signup","firstName","lastName","console","log","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","authorId","add","Date","App","exact","path","component","SignIn","SignUp","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","presence","sessions","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89956fe0.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\nconst SignedInLinks = (props) => {\r\n   const { profile } = props;\r\n   return (\r\n      <ul className=\"right\">\r\n         <li><NavLink to='/create'>New Project</NavLink></li>\r\n         <li><span onClick={props.signOut} >Log Out</span></li>\r\n         <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{profile.initials}</NavLink></li>\r\n      </ul>\r\n   )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      signOut: () => dispatch(signOut())\r\n   }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n   return (dispatch, getState, { getFirebase }) => {\r\n      const firebase = getFirebase();\r\n      firebase.auth().signInWithEmailAndPassword(\r\n         credentials.email,\r\n         credentials.password\r\n      ).then(() => {\r\n         dispatch({ type: 'LOGIN_SUCCESS' });\r\n      }).catch((error) => {\r\n         dispatch({ type: 'LOGIN_ERROR', error });\r\n      })\r\n   }\r\n}\r\n\r\nexport const signOut = () => {\r\n   return (dispatch, getState, { getFirebase }) => {\r\n      const firebase = getFirebase();\r\n      firebase.auth().signOut().then(() => {\r\n         dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n      }).catch(() => {\r\n         dispatch({ type: 'SIGNOUT_FAILURE' });\r\n      })\r\n   }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n   return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n\r\n      firebase.auth().createUserWithEmailAndPassword(\r\n         newUser.email,\r\n         newUser.password\r\n      ).then((res) => {\r\n         // res.user\r\n         // console.log('auth created');\r\n         // console.log(res.user.uid);\r\n         firestore.collection('users').doc(res.user.uid).set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0]\r\n         })\r\n         // console.log('users collection')\r\n      }).then(() => {\r\n         // console.log('signup success');\r\n         dispatch({ type: 'SIGNUP_SUCCESS' })\r\n      }).catch((error) => {\r\n         // console.log(error);\r\n         dispatch({ type: 'SIGNUP_FAILURE', error })\r\n      })\r\n   }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nconst SignedOutLinks = () => {\r\n   return (\r\n      <ul className=\"right\">\r\n         <li><NavLink to='/signup'>Signup</NavLink></li>\r\n         <li><NavLink to='/signin'>Login</NavLink></li>\r\n\r\n      </ul>\r\n   )\r\n\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './signedinlinks'\r\nimport SignedOutLinks from './signedoutlinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n   const { auth, profile } = props;\r\n   // console.log(profile)\r\n   return (\r\n      <nav className=\"nav-wrapper light-blue darken-1\">\r\n         <div className=\"container\">\r\n            <Link to='/' className=\"brand-logo\">My Projects</Link>\r\n            {\r\n               (auth.uid) ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n            }\r\n\r\n         </div>\r\n      </nav>\r\n   )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      auth: state.firebase.auth,\r\n      profile: state.firebase.profile\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\nconst Notifications = ({ notifications }) => {\r\n   return (\r\n      <div className=\"section\">\r\n         <div className=\"card\">\r\n            <div className=\"card-content\">\r\n               <span className=\"card-title\">Notification</span>\r\n               <ul className=\"notification\">\r\n                  {notifications && notifications.map(notification => {\r\n                     return (\r\n                        <li key={notification.id}>\r\n                           <span>\r\n                              {notification.user}\r\n                           </span>\r\n                           <span>&nbsp;{notification.content}</span>\r\n                           <div>{moment(notification.time.toDate()).fromNow()}</div>\r\n                        </li>)\r\n                  })}\r\n               </ul>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\nconst ProjectSummary = ({ project, auth }) => {\r\n   return (\r\n      auth.uid ?\r\n         <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n               <span className=\"card-title\">{project.title}</span>\r\n               <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n               <p className=\"grey-text\">  {moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n         </div> : <Redirect to=\"/signin\"></Redirect>\r\n   )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      auth: state.firebase.auth\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProjectSummary)","import React from 'react'\r\nimport ProjectSummary from './projectSummary'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nconst ProjectList = ({ projects, auth }) => {\r\n   return (\r\n      auth.uid ?\r\n         <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n               return (\r\n                  <Link to={'/project/' + project.id}>\r\n                     <ProjectSummary project={project} key={project.id} />\r\n                  </Link>\r\n               )\r\n            })}\r\n         </div> : <Redirect to='/signin'></Redirect>\r\n   )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      auth: state.firebase.auth\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProjectList)","import React, { Component } from 'react'\r\nimport Notifications from './notifications'\r\nimport ProjectList from '../projects/projectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nclass Dashboard extends Component {\r\n   render() {\r\n      const { projects, auth, notifications } = this.props\r\n      return (\r\n         auth.uid ?\r\n            <div className=\"dashboard container\">\r\n               <div className=\"row\">\r\n                  <div className=\"col s12 m6\">\r\n                     <ProjectList projects={projects} />\r\n                  </div>\r\n                  <div className=\"col s12 m5 offset-m1\">\r\n                     <Notifications notifications={notifications} />\r\n                  </div>\r\n               </div>\r\n            </div> : <Redirect to='/signin'></Redirect>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      projects: state.firestore.ordered.projects,\r\n      auth: state.firebase.auth,\r\n      notifications: state.firestore.ordered.notifications\r\n   }\r\n}\r\n\r\nexport default compose(\r\n   connect(mapStateToProps),\r\n   firestoreConnect([\r\n      { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n      { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n   ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\nconst ProjectDetails = (props) => {\r\n   const { project, auth } = props;\r\n   if (project) {\r\n      return (\r\n         auth.uid ?\r\n            <div className=\"container section project-details\">\r\n               <div className=\"card z-depth-0\">\r\n                  <div className=\"card-content\">\r\n                     <span className=\"card-title\">{project.title}</span>\r\n                     <p>\r\n                        {project.content}\r\n                     </p>\r\n                  </div>\r\n                  <div className=\"card-action grey lighten-4 grey-text\">\r\n                     <div>\r\n                        Posted by {project.authorFirstName} {project.authorLastName}\r\n                     </div>\r\n                     <div>\r\n                        {moment(project.createdAt.toDate()).calendar()}\r\n\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div> : <Redirect to=\"/signin\"></Redirect>\r\n      )\r\n   }\r\n   else {\r\n      return (\r\n         <div className=\"container center\">\r\n            <p>loading project....</p>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n   const id = ownProps.match.params.id;\r\n   const projects = state.firestore.data.projects;\r\n   const project = projects ? projects[id] : null;\r\n   return {\r\n      project: project,\r\n      auth: state.firebase.auth\r\n   }\r\n}\r\n\r\nexport default compose(\r\n   connect(mapStateToProps),\r\n   firestoreConnect([\r\n      { collection: 'projects' }\r\n   ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\nexport class Signin extends Component {\r\n   state = {\r\n      email: '',\r\n      password: ''\r\n   }\r\n   handleChange = (e) => {\r\n      this.setState({\r\n         [e.target.id]: e.target.value\r\n      })\r\n   }\r\n   handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.signIn(this.state);\r\n   }\r\n   render() {\r\n      const { authError, auth } = this.props;\r\n      return (\r\n         auth.uid ?\r\n            <Redirect to=\"/\"></Redirect> :\r\n            <div className=\"container\">\r\n               <form className=\"white \" onSubmit={this.handleSubmit}>\r\n                  <h5 className=\"grey-text text-darken-3\">Sign in</h5>\r\n                  <div className=\"input-field\">\r\n                     <label htmlFor=\"email\">Email</label>\r\n                     <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                  </div>\r\n                  <div className=\"input-field\">\r\n                     <label htmlFor=\"password\">Password</label>\r\n                     <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                  </div>\r\n                  <div className=\"input-field\">\r\n                     <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                     <div className=\"red-text center\">{\r\n                        authError ? <p>{authError}</p> : null\r\n                     }\r\n                     </div>\r\n                  </div>\r\n               </form>\r\n            </div>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      authError: state.auth.authError,\r\n      auth: state.firebase.auth\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      signIn: (creds) => dispatch(signIn(creds))\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(Signin)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authActions'\r\nexport class Signup extends Component {\r\n   state = {\r\n      email: '',\r\n      password: '',\r\n      firstName: '',\r\n      lastName: ''\r\n   }\r\n   handleChange = (e) => {\r\n      this.setState({\r\n         [e.target.id]: e.target.value\r\n      })\r\n   }\r\n   handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      console.log(this.state);\r\n      this.props.signUp(this.state)\r\n   }\r\n   render() {\r\n      const { auth, authError } = this.props\r\n      return (\r\n         auth.uid ? <Redirect to=\"/\"></Redirect> :\r\n            <div className=\"container\">\r\n               <form className=\"white \" onSubmit={this.handleSubmit}>\r\n                  <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                  <div className=\"input-field\">\r\n                     <label htmlFor=\"email\">Email</label>\r\n                     <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                  </div>\r\n                  <div className=\"input-field\">\r\n                     <label htmlFor=\"firstName\">First Name</label>\r\n                     <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                  </div>\r\n                  <div className=\"input-field\">\r\n                     <label htmlFor=\"lastName\">Last Name</label>\r\n                     <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                  </div>\r\n                  <div className=\"input-field\">\r\n                     <label htmlFor=\"password\">Password</label>\r\n                     <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                  </div>\r\n                  <div className=\"input-field\">\r\n                     <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n\r\n                  </div>\r\n                  {authError ? <p className=\"red-text-center\">{authError}</p> : null}\r\n               </form>\r\n            </div>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      auth: state.firebase.auth,\r\n      authError: state.auth.authError\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      signUp: (newUser) => dispatch(signUp(newUser))\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\nexport class CreateProject extends Component {\r\n   state = {\r\n      title: '',\r\n      content: ''\r\n   }\r\n   handleChange = (e) => {\r\n      this.setState({\r\n         [e.target.id]: e.target.value\r\n      })\r\n   }\r\n   handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.createProject(this.state)\r\n   }\r\n   render() {\r\n      const { auth } = this.props;\r\n      return (\r\n         auth.uid ?\r\n            <div className=\"container\">\r\n               <form className=\"white \" onSubmit={this.handleSubmit}>\r\n                  <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                  <div className=\"input-field\">\r\n                     <label htmlFor=\"title\">Title</label>\r\n                     <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                  </div>\r\n                  <div className=\"input-field\">\r\n                     <label htmlFor=\"content\">Content</label>\r\n                     <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange} />\r\n                  </div>\r\n                  <div className=\"input-field\">\r\n                     <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                  </div>\r\n               </form>\r\n            </div> : <Redirect to=\"/signin\"></Redirect>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      createProject: (project) => { dispatch(createProject(project)) }\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      auth: state.firebase.auth\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n   return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n      const firestore = getFirestore();\r\n      const profile = getState().firebase.profile;\r\n      const authorId = getState().firebase.auth.uid;\r\n      firestore.collection('projects').add({\r\n         ...project,\r\n         authorFirstName: profile.firstName,\r\n         authorLastName: profile.lastName,\r\n         authorId: authorId,\r\n         createdAt: new Date()\r\n      }).then(() => {\r\n         dispatch({ type: 'CREATE_PROJECT', project })\r\n      }).catch((error) => {\r\n         console.log(error);\r\n         dispatch({ type: 'CREATE_PROJECT_ERROR', error })\r\n      })\r\n   }\r\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/navbar'\nimport Dashboard from './components/dashboard/dashboard'\nimport ProjectDetails from './components/projects/projectDetails'\nimport SignIn from './components/auth/signin'\nimport SignUp from './components/auth/signup'\nimport CreateProject from './components/projects/createProject'\nfunction App() {\n   return (\n      <BrowserRouter>\n         <div className=\"App\">\n            <Navbar />\n            <Switch>\n               <Route exact path=\"/\" component={Dashboard} />\n               <Route path=\"/signin\" component={SignIn} />\n               <Route path=\"/signup\" component={SignUp} />\n               <Route path=\"/create\" component={CreateProject} />\n               <Route path=\"/project/:id\" component={ProjectDetails} />\n            </Switch>\n         </div>\n      </BrowserRouter>\n   );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n   authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n   switch (action.type) {\r\n      case 'LOGIN_SUCCESS':\r\n         console.log('login success');\r\n         return {\r\n            ...state,\r\n            authError: null\r\n         };\r\n      case 'LOGIN_ERROR':\r\n         console.log('login error')\r\n         return {\r\n            ...state,\r\n            authError: 'LOGIN FAILED'\r\n         };\r\n      case 'SIGNOUT_SUCCESS':\r\n         console.log('logout success');\r\n         return state;\r\n      case 'SIGNOUT_FAILURE':\r\n         console.log('logout failure');\r\n         return state;\r\n      case 'SIGNUP_SUCCESS':\r\n         console.log('signup success')\r\n         return {\r\n            ...state,\r\n            authError: null\r\n         };\r\n      case 'SIGNUP_FAILURE':\r\n         console.log('signup error');\r\n         return {\r\n            ...state,\r\n            authError: action.error.message\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n   projects: [\r\n      { id: 1, title: 'Hello World', content: \"hey how are you\" },\r\n      { id: 2, title: 'Hello World  2', content: \"hey how are you 2\" }\r\n   ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n   switch (action.type) {\r\n      case 'CREATE_PROJECT':\r\n         console.log(\"created project\", action.project);\r\n         return state;\r\n      case 'CREATE_PROJECT_ERROR':\r\n         console.log('create project error', action.error);\r\n         return state;\r\n      default:\r\n         return state;\r\n\r\n   }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\nconst rootReducer = combineReducers({\r\n   auth: authReducer,\r\n   project: projectReducer,\r\n   firestore: firestoreReducer,\r\n   firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n   apiKey: \"AIzaSyAwAIEK3crW_F8zj51LCBd8TzWp7gNSlrg\",\r\n   authDomain: \"project-store-1517e.firebaseapp.com\",\r\n   databaseURL: \"https://project-store-1517e.firebaseio.com\",\r\n   projectId: \"project-store-1517e\",\r\n   storageBucket: \"project-store-1517e.appspot.com\",\r\n   messagingSenderId: \"934950350266\",\r\n   appId: \"1:934950350266:web:87160ef61b3e6233aa8183\",\r\n   measurementId: \"G-TRQW87Q2XF\"\r\n};\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\n\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider, useSelector } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase'\nimport fbConfig from './config/fbconfig'\nimport firebase from 'firebase/app'\n\n\nconst store = createStore(\n   rootReducer,\n   compose(\n      applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n      reduxFirestore(firebase, fbConfig),\n   )\n);\n\nconst rrfConfig = {\n   userProfile: 'users',\n   useFirestoreForProfile: true\n}\n\nconst rrfProps = {\n   firebase,\n   config: rrfConfig,\n   dispatch: store.dispatch,\n   createFirestoreInstance,\n   presence: 'presence',\n   sessions: 'sessions'\n}\n\nfunction AuthIsLoaded({ children }) {\n   const auth = useSelector(state => state.firebase.auth)\n   if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n   return children\n}\n\nReactDOM.render(\n   <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n         <AuthIsLoaded>\n            <App />\n         </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n   </Provider>,\n   document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}